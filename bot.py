from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes

TOKEN = "7767900402:AAHsRjDChEL83frntnxkN3coswjP9sbX0Rg"  # <-- –ü–æ—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π –Ω–∞—Å—Ç–æ—è—â–∏–π —Ç–æ–∫–µ–Ω

# –ê–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç (–≥–¥–µ –±—É–¥—É—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –±—Ä–æ–Ω–∏)
ADMIN_CHAT_ID = -5676657478  # <-- –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π —á–∞—Ç id

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [InlineKeyboardButton("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data="book")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –º–æ–∂–µ—Ç–µ —Å–¥–µ–ª–∞—Ç—å –±—Ä–æ–Ω—å:", reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    if query.data == "book":
        user = query.from_user
        message = (
            f"üì© –ù–æ–≤–∞—è –±—Ä–æ–Ω—å –æ—Ç @{user.username or user.first_name}.\n"
            f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}"
        )
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=message)
        await query.edit_message_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –±—Ä–æ–Ω—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")

def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))

    app.run_polling()

if __name__ == "__main__":
    main()
