import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
    CallbackQueryHandler,
    MessageHandler,
    filters,
)
from dotenv import load_dotenv
from datetime import datetime

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    keyboard = [
        [InlineKeyboardButton("–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data="book_now")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Taiga Family! üå≤", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å"
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()
    await query.message.reply_text("–í–≤–µ–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–∞—à–µ –∏–º—è:")

    context.user_data["booking_stage"] = "name"

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
async def booking_input_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    text = update.message.text
    stage = context.user_data.get("booking_stage")

    if stage == "name":
        context.user_data["name"] = text
        context.user_data["booking_stage"] = "date"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –±—Ä–æ–Ω–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-07-10):")
    elif stage == "date":
        context.user_data["date"] = text
        context.user_data["booking_stage"] = "time"
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –±—Ä–æ–Ω–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 20:00):")
    elif stage == "time":
        context.user_data["time"] = text
        context.user_data["booking_stage"] = None

        name = context.user_data.get("name")
        date = context.user_data.get("date")
        time = context.user_data.get("time")

        admin_chat_id = os.getenv("ADMIN_CHAT_ID")
        booking_msg = (
            f"–ù–æ–≤–∞—è –±—Ä–æ–Ω—å:\n\nüë§ –ò–º—è: {name}\nüìÖ –î–∞—Ç–∞: {date}\n‚è∞ –í—Ä–µ–º—è: {time}\nüÜî Telegram ID: {update.effective_user.id}"
        )

        await update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –±—Ä–æ–Ω—å –ø—Ä–∏–Ω—è—Ç–∞. ‚úÖ")
        if admin_chat_id:
            await context.bot.send_message(chat_id=admin_chat_id, text=booking_msg)

# –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), booking_input_handler))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if __name__ == "__main__":
    main()
